<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clt.dao.CommentDao">

    <resultMap type="com.clt.entity.Comment" id="CommentMap">
        <result property="commentId" column="comment_id" jdbcType="VARCHAR"/>
        <result property="bookId" column="book_id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="commentTime" column="comment_time" jdbcType="TIMESTAMP"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="score" column="score" jdbcType="INTEGER"/>
        <result property="replyFlag" column="reply_flag" jdbcType="INTEGER"/>
        <result property="replyId" column="reply_id" jdbcType="VARCHAR"/>
        <result property="zanNumber" column="zan_number" jdbcType="INTEGER"/>
        <result property="commentPid" column="comment_pid" jdbcType="VARCHAR"/>
        <result property="replyUserName" column="reply_user_name" jdbcType="VARCHAR"/>
        <result property="userName" column="user_name" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CommentMap">
        select
          comment_id, book_id, user_id, comment_time, content, score, reply_flag, reply_id, zan_number, comment_pid, reply_user_name
        from library.comment
        where comment_id = #{commentId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CommentMap">
        select
          comment_id, book_id, user_id, comment_time, content, score, reply_flag, reply_id, zan_number, commentPid, reply_user_name
        from library.comment
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAllByCondition" resultMap="CommentMap">
        select
        comment_id, book_id, comment.user_id, comment_time, content, score, reply_flag, reply_id,
        zan_number, comment_pid, comment.reply_user_name, user_name, avatar
        from library.comment, library.user
        <where>
            and user.user_id = comment.user_id
            <if test="commentId != null and commentId != ''">
                and comment_id = #{commentId}
            </if>
            <if test="bookId != null and bookId != ''">
                and book_id = #{bookId}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="commentTime != null">
                and comment_time = #{commentTime}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="score != null">
                and score = #{score}
            </if>
            <if test="replyFlag != null">
                and reply_flag = #{replyFlag}
            </if>
            <if test="replyId != null and replyId != ''">
                and reply_id = #{replyId}
            </if>
            <if test="zanNumber != null and zanNumber != ''">
                and zan_number = #{zanNumber}
            </if>
            <if test="commentPid != null and commentPid != ''">
                and comment_pid = #{commentPid}
            </if>
            <if test="replyUserName != null and replyUserName != ''">
                and reply_user_name = #{replyUserName}
            </if>
            <if test="sortWay != null and sortWay != ''">
                order by ${sortWay} desc
            </if>

        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" >
        insert into library.comment(comment_id, book_id, user_id, comment_time, content, score, reply_flag, reply_id, zan_number, comment_pid, reply_user_name)
        values (#{commentId}, #{bookId}, #{userId}, #{commentTime}, #{content}, #{score}, #{replyFlag}, #{replyId}, #{zanNumber}, #{commentPid}, #{replyUserName})
    </insert>

    <!--新增所有列-->
    <insert id="insertBatch" >
        insert into library.comment(comment_id, book_id, user_id, comment_time, content,
        score, reply_flag, reply_id, zan_number, comment_pid, reply_user_name)
        values
        <foreach collection="list" item="entity" index="index" separator=",">
            (#{entity.commentId}, #{entity.bookId}, #{entity.userId}, #{entity.commentTime}, #{entity.content},
            #{entity.score}, #{entity.replyFlag}, #{entity.replyId}, #{entity.zanNumber}, #{entity.commentPid},
            #{entity.replyUserName})
        </foreach>
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update library.comment
        <set>
            <if test="bookId != null and bookId != ''">
                book_id = #{bookId},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="commentTime != null">
                comment_time = #{commentTime},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="score != null">
                score = #{score},
            </if>
            <if test="replyFlag != null">
                reply_flag = #{replyFlag},
            </if>
            <if test="replyId != null and replyId != ''">
                reply_id = #{replyId},
            </if>
            zan_number = #{zanNumber},
            <if test="commentPid != null and commentPid != ''">
                comment_pid = #{commentPid},
            </if>
            <if test="replyUserName != null and replyUserName != ''">
                reply_user_name = #{replyUserName},
            </if>
        </set>
        where comment_id = #{commentId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from library.comment where comment_id = #{commentId}
    </delete>

    <delete id="deleteByCommentPid">
        delete from library.comment where comment_pid = #{commentPid}
    </delete>


</mapper>